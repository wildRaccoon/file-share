version: '3.3'
services:
  ubuntu:
    image: ubuntu
    volumes:
      - ./data:/ext/data
  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    container_name: es
    environment:
      - node.name=es
      - cluster.name=es-docker
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - http.cors.allow-headers=*
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
    volumes:
      - ./data/es:/usr/share/elasticsearch/data
  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.0
    container_name: kibana
    depends_on: 
      - es
    ports:
      - 5601:5601
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: http://es:9200
  mongo:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - 27017:27017
    #mongo falis to start with mounted volume !!!
    #volumes:
    #  - ./data/mongo:/data/db
  redis:
    image: "redis:alpine"
    command: redis-server --requirepass sOmE_sEcUrE_pAsS
    ports:
     - "6379:6379"
    volumes:
     - ./data/redis/data:/var/lib/redis
     #- ./data/redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
     - REDIS_REPLICATION_MODE=master
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    # command: "rabbitmq-plugins enable rabbitmq_management"
    # volumes:
    #     - ./data/rabbitmq/etc/:/etc/rabbitmq/
    #     - ./data/rabbitmq/data/:/var/lib/rabbitmq/
    #     - ./data/rabbitmq/logs/:/var/log/rabbitmq/
    environment:
        RABBITMQ_ERLANG_COOKIE: "secret cookie here"
        RABBITMQ_DEFAULT_USER: "user"
        RABBITMQ_DEFAULT_PASS: "password"
    ports:
        - 5672:5672
        - 15672:15672
  mysql:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'mydb'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - ./data/my-db:/var/lib/mysql
      - ./data/my-backup:/my-backup
  phpmyadmin:
    restart: always
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    hostname: phpmyadminb
    ports:
      - 8000:80
    environment:
      - PMA_HOSTS=db
      - PMA_VERBOSES=mydb
      - PMA_USER=root
      - PMA_PASSWORD=password
